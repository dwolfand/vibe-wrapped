name: Deploy to GitHub Pages and API

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./client/package-lock.json"

      - name: Install dependencies
        working-directory: ./client
        run: |
          npm ci
          npm install @rollup/rollup-linux-x64-gnu --no-save

      - name: Build
        working-directory: ./client
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "./client/dist"

  deploy-client:
    needs: build-client
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  deploy-api:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://wrapped-api.thevibestudiolynchburg.com
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./api/package-lock.json"

      - name: Install dependencies
        working-directory: ./api
        run: npm ci

      - name: Deploy API
        working-directory: ./api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_CC_EMAIL: ${{ secrets.ADMIN_CC_EMAIL }}
        run: npm run deploy-ci
